Index: app/src/main/java/com/example/surfspot/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.surfspot;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.example.surfspot.model.SurfSpot;\r\nimport com.example.surfspot.ui.detail.SpotDetailFragment;\r\nimport com.example.surfspot.ui.detail.SurfSpotListFragment;\r\nimport com.example.surfspot.viewmodel.SpotDetailViewModel;\r\n\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class MainActivity extends AppCompatActivity implements SurfSpotListFragment.OnSpotSelectedListener {\r\n    private final static  String TAG = \"MainActivity\";\r\n\r\n    private static final String BASE_URL = getApiBaseUrl();\r\n\r\n    private static String getApiBaseUrl() {\r\n        if (isEmulator()) {\r\n            // Utiliser 10.0.2.2 pour l'émulateur qui pointe vers localhost de la machine hôte\r\n            return \"http://10.0.2.2:8080\";\r\n        } else {\r\n            // Utiliser l'adresse IP réelle de votre serveur pour les appareils physiques\r\n            return \"http://192.168.12.220:8080\"; // Remplacez par l'adresse IP de votre serveur\r\n        }\r\n    }\r\n\r\n    private static boolean isEmulator() {\r\n        return Build.PRODUCT.contains(\"sdk\") ||\r\n                Build.HARDWARE.contains(\"goldfish\") ||\r\n                Build.HARDWARE.contains(\"ranchu\");\r\n    }\r\n\r\n    private SpotDetailViewModel viewModel;\r\n\r\n    public static Retrofit getRetrofitInstance() {\r\n        // Créer un client OkHttp avec un intercepteur pour ajouter l'en-tête d'autorisation\r\n        OkHttpClient client = new OkHttpClient.Builder()\r\n                .addInterceptor(chain -> {\r\n                    Request original = chain.request();\r\n                    Request request = original.newBuilder()\r\n                            .method(original.method(), original.body())\r\n                            .build();\r\n                    return chain.proceed(request);\r\n                })\r\n                .build();\r\n\r\n        return new Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .client(client)\r\n                .build();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Log.d(TAG, \"je suis avant le viewmodel provider\");\r\n\r\n        // Initialiser le ViewModel\r\n        viewModel = new ViewModelProvider(this).get(SpotDetailViewModel.class);\r\n\r\n        Log.d(TAG, \"je suis apres le viewmodel provider\");\r\n\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        if (toolbar != null) {\r\n            setSupportActionBar(toolbar);\r\n        }\r\n\r\n        ActionBar actionBar = getSupportActionBar();\r\n        if (actionBar != null) {\r\n            actionBar.setTitle(\"Spots de Surf\");\r\n        }\r\n\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        if (savedInstanceState == null) {\r\n            getSupportFragmentManager().beginTransaction()\r\n                    .replace(R.id.fragment_container, new SurfSpotListFragment())\r\n                    .commit();\r\n        }\r\n\r\n        getOnBackPressedDispatcher().addCallback(this, new OnBackPressedCallback(true) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                if (getSupportFragmentManager().getBackStackEntryCount() > 0) {\r\n                    getSupportFragmentManager().popBackStack();\r\n                    ActionBar actionBar = getSupportActionBar();\r\n                    if (actionBar != null) {\r\n                        actionBar.setTitle(\"Spots de Surf\");\r\n                        actionBar.setDisplayHomeAsUpEnabled(false);\r\n                        if (getSupportFragmentManager().getBackStackEntryCount() == 0) {\r\n                            actionBar.setDisplayHomeAsUpEnabled(false);\r\n                        }\r\n                    }\r\n                } else {\r\n                    setEnabled(false);\r\n                    onBackPressed();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onSpotSelected(int spotId) {\r\n        // Charger les détails du spot dans le ViewModel\r\n        Log.d(TAG, \"je suis avant le viewmodel loadspot\");\r\n\r\n        viewModel.loadSurfSpot(spotId);\r\n\r\n        Log.d(TAG, \"je suis apres le viewmodel loadspot\");\r\n\r\n        SpotDetailFragment detailFragment = SpotDetailFragment.newInstance(spotId);\r\n\r\n        getSupportFragmentManager().beginTransaction()\r\n                .replace(R.id.fragment_container, detailFragment)\r\n                .addToBackStack(null)\r\n                .commit();\r\n\r\n        ActionBar actionBar = getSupportActionBar();\r\n        if (actionBar != null) {\r\n            actionBar.setTitle(\"Détails du spot\");\r\n            actionBar.setDisplayHomeAsUpEnabled(true);\r\n        }\r\n\r\n        Log.d(TAG, \"onSpotSelected: Titre changé pour 'Détails du spot', ID: \" + spotId);\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        if (getSupportFragmentManager().getBackStackEntryCount() > 0) {\r\n            getSupportFragmentManager().popBackStack();\r\n            ActionBar actionBar = getSupportActionBar();\r\n            if (actionBar != null) {\r\n                actionBar.setTitle(\"Spots de Surf\");\r\n                actionBar.setDisplayHomeAsUpEnabled(false);\r\n                if (getSupportFragmentManager().getBackStackEntryCount() == 0) {\r\n                    actionBar.setDisplayHomeAsUpEnabled(false);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return super.onSupportNavigateUp();\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        if (item.getItemId() == android.R.id.home) {\r\n            return onSupportNavigateUp();\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/surfspot/MainActivity.java b/app/src/main/java/com/example/surfspot/MainActivity.java
--- a/app/src/main/java/com/example/surfspot/MainActivity.java	(revision 3f36240120867f4fa0528c752e2b4a9396bb0803)
+++ b/app/src/main/java/com/example/surfspot/MainActivity.java	(date 1747228067564)
@@ -39,7 +39,7 @@
             return "http://10.0.2.2:8080";
         } else {
             // Utiliser l'adresse IP réelle de votre serveur pour les appareils physiques
-            return "http://192.168.12.220:8080"; // Remplacez par l'adresse IP de votre serveur
+            return "http://192.168.12.211:8080"; // Remplacez par l'adresse IP de votre serveur
         }
     }
 
Index: app/src/main/res/xml/network_security_config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<network-security-config>\r\n    <domain-config cleartextTrafficPermitted=\"true\">\r\n        <domain includeSubdomains=\"true\">192.168.12.220</domain>\r\n        <domain includeSubdomains=\"true\">10.0.2.2</domain>\r\n    </domain-config>\r\n</network-security-config>
===================================================================
diff --git a/app/src/main/res/xml/network_security_config.xml b/app/src/main/res/xml/network_security_config.xml
--- a/app/src/main/res/xml/network_security_config.xml	(revision 3f36240120867f4fa0528c752e2b4a9396bb0803)
+++ b/app/src/main/res/xml/network_security_config.xml	(date 1747228067572)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <network-security-config>
     <domain-config cleartextTrafficPermitted="true">
-        <domain includeSubdomains="true">192.168.12.220</domain>
+        <domain includeSubdomains="true">192.168.12.211</domain>
         <domain includeSubdomains="true">10.0.2.2</domain>
     </domain-config>
 </network-security-config>
\ No newline at end of file
